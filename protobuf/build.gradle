
buildscript {
    ext.kotlinVersion = '1.3.72'
    ext.coroutinesVersion = '1.3.7'
    ext.protobufPlugInVersion = '0.8.12'
    ext.protobufVersion = '3.12.2'
    ext.grpcVersion = '1.29.0'
    ext.grpcKotlinVersion = '0.1.3'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "com.google.protobuf:protobuf-gradle-plugin:${protobufPlugInVersion}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

plugins {
    id 'com.google.protobuf' version "${protobufPlugInVersion}"
    id 'idea'
    id 'org.jetbrains.kotlin.jvm' version '1.3.71'
    id 'application'
}

repositories {
    jcenter()
}


group = "com.dailydesk-protobuf"
version = "0.0.1"
java.sourceCompatibility = JavaVersion.VERSION_1_8
java.targetCompatibility = JavaVersion.VERSION_1_8

dependencies {

    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"

    // grpc and protobuf
    implementation "com.google.protobuf:protobuf-java:$protobufVersion"
    implementation "com.google.protobuf:protobuf-java-util:$protobufVersion"
    implementation "io.grpc:grpc-netty-shaded:$grpcVersion"
    implementation "io.grpc:grpc-protobuf:$grpcVersion"
    implementation "io.grpc:grpc-stub:$grpcVersion"
    implementation "io.grpc:grpc-kotlin-stub:$grpcKotlinVersion"
}

idea {
    module {
        sourceDirs += file("${projectDir}/src/generated/main/java")
        sourceDirs += file("${projectDir}/src/generated/main/grpc")
        sourceDirs += file("${projectDir}/src/generated/main/grpckt")
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs = freeCompilerArgs + "-Xjsr305=strict"
        jvmTarget = "1.8"
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protobufVersion"
    }

    plugins {

        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion"
        }

        grpckt {
            artifact = "io.grpc:protoc-gen-grpc-kotlin:$grpcKotlinVersion"
        }
    }

    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc { }
                // Generate Kotlin gRPC using the custom plugin from library
                grpckt { }
            }
        }
    }
}